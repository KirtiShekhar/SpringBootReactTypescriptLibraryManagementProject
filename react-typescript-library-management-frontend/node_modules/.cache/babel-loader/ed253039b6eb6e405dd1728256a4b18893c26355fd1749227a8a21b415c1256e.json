{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\react-typescript-library-management\\\\src\\\\layouts\\\\ManageLibraryPage\\\\components\\\\ChangeQuantityOfBooks.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Pagination } from \"../../Utils/Pagination\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { ChangeQuantityOfBook } from \"./ChangeQuantityOfBook\";\nimport { BOOK_BASE_URL } from \"../../../commons/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChangeQuantityOfBooks = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [booksPerPage] = useState(5);\n  const [totalAmountOfBooks, setTotalAmountOfBooks] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [bookDelete, setBookDelete] = useState(false);\n  useEffect(() => {\n    const fetchBooks = async () => {\n      let fetchBooksPageWiseUrl = BOOK_BASE_URL + `/service/all/pageWise?page=${currentPage - 1}&size=${booksPerPage}`;\n      const response = await fetch(fetchBooksPageWiseUrl);\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const responseJson = await response.json();\n      const responseBooksData = responseJson.content;\n      setTotalAmountOfBooks(responseJson.pageable.totalElements);\n      setTotalPages(responseJson.pageable.totalPages);\n      const loadedBooks = [];\n      for (const key in responseBooksData) {\n        loadedBooks.push({\n          bookId: responseBooksData[key].bookId,\n          bookTitle: responseBooksData[key].bookTitle,\n          bookAuthor: responseBooksData[key].bookAuthor,\n          bookDescription: responseBooksData[key].bookDescription,\n          copies: responseBooksData[key].copies,\n          copiesAvailable: responseBooksData[key].copiesAvailable,\n          bookCategory: responseBooksData[key].bookCategory,\n          bookImage: responseBooksData[key].bookImage\n        });\n      }\n      setBooks(loadedBooks);\n      setIsLoading(false);\n    };\n    fetchBooks().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, [booksPerPage, currentPage, bookDelete]);\n  const deleteBook = () => setBookDelete(!bookDelete);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n  const indexOfLastBook = currentPage * booksPerPage;\n  const indexOfFirstBook = indexOfLastBook - booksPerPage;\n  let lastItem = booksPerPage * currentPage <= totalAmountOfBooks ? booksPerPage * currentPage : totalAmountOfBooks;\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [totalAmountOfBooks > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Number of results: (\", totalAmountOfBooks, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [indexOfFirstBook + 1, \" to \", lastItem, \" of \", totalAmountOfBooks, \" items:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), books.map(book => /*#__PURE__*/_jsxDEV(ChangeQuantityOfBook, {\n        book: book,\n        deleteBook: deleteBook\n      }, book.bookId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Add a book before changing quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ChangeQuantityOfBooks, \"McLVz5Y8QR+eLejlL8LK1acmwvk=\");\n_c = ChangeQuantityOfBooks;\nvar _c;\n$RefreshReg$(_c, \"ChangeQuantityOfBooks\");","map":{"version":3,"names":["useState","useEffect","Pagination","SpinnerLoading","ChangeQuantityOfBook","BOOK_BASE_URL","ChangeQuantityOfBooks","books","setBooks","isLoading","setIsLoading","httpError","setHttpError","currentPage","setCurrentPage","booksPerPage","totalAmountOfBooks","setTotalAmountOfBooks","totalPages","setTotalPages","bookDelete","setBookDelete","fetchBooks","fetchBooksPageWiseUrl","response","fetch","ok","Error","responseJson","json","responseBooksData","content","pageable","totalElements","loadedBooks","key","push","bookId","bookTitle","bookAuthor","bookDescription","copies","copiesAvailable","bookCategory","bookImage","catch","error","message","deleteBook","indexOfLastBook","indexOfFirstBook","lastItem","paginate","pageNumber","map","book"],"sources":["D:/ReactProjects/react-typescript-library-management/src/layouts/ManageLibraryPage/components/ChangeQuantityOfBooks.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Books from \"../../../models/booksEntity\";\r\nimport { Pagination } from \"../../Utils/Pagination\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport { ChangeQuantityOfBook } from \"./ChangeQuantityOfBook\";\r\nimport { BOOK_BASE_URL } from \"../../../commons/constants\";\r\n\r\nexport const ChangeQuantityOfBooks = () => {\r\n  const [books, setBooks] = useState<Books[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [booksPerPage] = useState(5);\r\n  const [totalAmountOfBooks, setTotalAmountOfBooks] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [bookDelete, setBookDelete] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchBooks = async () => {\r\n      let fetchBooksPageWiseUrl: string =\r\n        BOOK_BASE_URL +\r\n        `/service/all/pageWise?page=${currentPage - 1}&size=${booksPerPage}`;\r\n\r\n      const response = await fetch(fetchBooksPageWiseUrl);\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      const responseJson = await response.json();\r\n\r\n      const responseBooksData = responseJson.content;\r\n\r\n      setTotalAmountOfBooks(responseJson.pageable.totalElements);\r\n      setTotalPages(responseJson.pageable.totalPages);\r\n\r\n      const loadedBooks: Books[] = [];\r\n\r\n      for (const key in responseBooksData) {\r\n        loadedBooks.push({\r\n          bookId: responseBooksData[key].bookId,\r\n          bookTitle: responseBooksData[key].bookTitle,\r\n          bookAuthor: responseBooksData[key].bookAuthor,\r\n          bookDescription: responseBooksData[key].bookDescription,\r\n          copies: responseBooksData[key].copies,\r\n          copiesAvailable: responseBooksData[key].copiesAvailable,\r\n          bookCategory: responseBooksData[key].bookCategory,\r\n          bookImage: responseBooksData[key].bookImage,\r\n        });\r\n      }\r\n\r\n      setBooks(loadedBooks);\r\n      setIsLoading(false);\r\n    };\r\n    fetchBooks().catch((error: any) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, [booksPerPage, currentPage, bookDelete]);\r\n\r\n  const deleteBook = () => setBookDelete(!bookDelete);\r\n\r\n  if (isLoading) {\r\n    return <SpinnerLoading />;\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <div className=\"container m-5\">\r\n        <p>{httpError}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const indexOfLastBook: number = currentPage * booksPerPage;\r\n  const indexOfFirstBook: number = indexOfLastBook - booksPerPage;\r\n  let lastItem =\r\n    booksPerPage * currentPage <= totalAmountOfBooks\r\n      ? booksPerPage * currentPage\r\n      : totalAmountOfBooks;\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {totalAmountOfBooks > 0 ? (\r\n        <>\r\n          <div className=\"mt-3\">\r\n            <h3>Number of results: ({totalAmountOfBooks})</h3>\r\n          </div>\r\n          <p>\r\n            {indexOfFirstBook + 1} to {lastItem} of {totalAmountOfBooks} items:\r\n          </p>\r\n          {books.map((book) => (\r\n            <ChangeQuantityOfBook\r\n              book={book}\r\n              key={book.bookId}\r\n              deleteBook={deleteBook}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <h5>Add a book before changing quantity</h5>\r\n      )}\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          paginate={paginate}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}