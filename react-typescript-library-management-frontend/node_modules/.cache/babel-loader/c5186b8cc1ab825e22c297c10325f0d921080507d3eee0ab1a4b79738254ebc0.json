{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\react-typescript-library-management\\\\src\\\\layouts\\\\BookCheckoutPage\\\\ReviewListPage\\\\ReviewListPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Pagination } from \"../../Utils/Pagination\";\nimport { Reviews } from \"../../Utils/Review\";\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\nimport { REVIEW_BASE_URL } from \"../../../commons/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReviewListPage = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [reviewsPerPage] = useState(5);\n  const [totalAmountOfReviews, setTotalAmountOfReviews] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n\n  // Book to lookup reviews\n  const bookId = window.location.pathname.split(\"/\")[2];\n  useEffect(() => {\n    const fetchBookReviewsData = async () => {\n      const reviewUrl = REVIEW_BASE_URL + `/service/getByBookId/pageWise?bookId=${bookId}&page=${currentPage - 1}&size=${reviewsPerPage}`;\n      const responseReviews = await fetch(reviewUrl);\n      if (!responseReviews.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const responseJsonReviews = await responseReviews.json();\n      const responseData = responseJsonReviews.content;\n      setTotalAmountOfReviews(responseJsonReviews.totalElements);\n      setTotalPages(responseJsonReviews.totalPages);\n      const loadedReviews = [];\n      for (const key in responseData) {\n        loadedReviews.push({\n          reviewId: responseData[key].reviewId,\n          userEmail: responseData[key].userEmail,\n          date: responseData[key].date,\n          rating: responseData[key].rating,\n          bookId: responseData[key].bookId,\n          reviewDescription: responseData[key].reviewDescription\n        });\n      }\n      setReviews(loadedReviews);\n      setIsLoading(false);\n    };\n    fetchBookReviewsData().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, [bookId, currentPage, reviewsPerPage]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container m-5\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n  const indexOfLastReview = currentPage * reviewsPerPage;\n  const indexOfFirstReview = indexOfLastReview - reviewsPerPage;\n  let lastItem = reviewsPerPage * currentPage <= totalAmountOfReviews ? reviewsPerPage * currentPage : totalAmountOfReviews;\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Comments: (\", reviews.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [indexOfFirstReview + 1, \" to \", lastItem, \" of \", totalAmountOfReviews, \" items:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: reviews.map(review => /*#__PURE__*/_jsxDEV(Reviews, {\n        review: review\n      }, review === null || review === void 0 ? void 0 : review.reviewId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalPages: totalPages,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewListPage, \"ovSQjsm05lo/tygS0SadJfupFEM=\");\n_c = ReviewListPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewListPage\");","map":{"version":3,"names":["useEffect","useState","Pagination","Reviews","SpinnerLoading","REVIEW_BASE_URL","ReviewListPage","reviews","setReviews","isLoading","setIsLoading","httpError","setHttpError","currentPage","setCurrentPage","reviewsPerPage","totalAmountOfReviews","setTotalAmountOfReviews","totalPages","setTotalPages","bookId","window","location","pathname","split","fetchBookReviewsData","reviewUrl","responseReviews","fetch","ok","Error","responseJsonReviews","json","responseData","content","totalElements","loadedReviews","key","push","reviewId","userEmail","date","rating","reviewDescription","catch","error","message","indexOfLastReview","indexOfFirstReview","lastItem","paginate","pageNumber","length","map","review"],"sources":["D:/ReactProjects/react-typescript-library-management/src/layouts/BookCheckoutPage/ReviewListPage/ReviewListPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Pagination } from \"../../Utils/Pagination\";\r\nimport { Reviews } from \"../../Utils/Review\";\r\nimport { SpinnerLoading } from \"../../Utils/SpinnerLoading\";\r\nimport Review from \"../../../models/reviewEntity\";\r\nimport { REVIEW_BASE_URL } from \"../../../commons/constants\";\r\n\r\nexport const ReviewListPage = () => {\r\n  const [reviews, setReviews] = useState<Review[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState(null);\r\n\r\n  // Pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [reviewsPerPage] = useState(5);\r\n  const [totalAmountOfReviews, setTotalAmountOfReviews] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  // Book to lookup reviews\r\n  const bookId = window.location.pathname.split(\"/\")[2];\r\n\r\n  useEffect(() => {\r\n    const fetchBookReviewsData = async () => {\r\n      const reviewUrl: string =\r\n        REVIEW_BASE_URL +\r\n        `/service/getByBookId/pageWise?bookId=${bookId}&page=${\r\n          currentPage - 1\r\n        }&size=${reviewsPerPage}`;\r\n\r\n      const responseReviews = await fetch(reviewUrl);\r\n\r\n      if (!responseReviews.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const responseJsonReviews = await responseReviews.json();\r\n\r\n      const responseData = responseJsonReviews.content;\r\n\r\n      setTotalAmountOfReviews(responseJsonReviews.totalElements);\r\n      setTotalPages(responseJsonReviews.totalPages);\r\n\r\n      const loadedReviews: Review[] = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedReviews.push({\r\n          reviewId: responseData[key].reviewId,\r\n          userEmail: responseData[key].userEmail,\r\n          date: responseData[key].date,\r\n          rating: responseData[key].rating,\r\n          bookId: responseData[key].bookId,\r\n          reviewDescription: responseData[key].reviewDescription,\r\n        });\r\n      }\r\n\r\n      setReviews(loadedReviews);\r\n      setIsLoading(false);\r\n    };\r\n    fetchBookReviewsData().catch((error: any) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n  }, [bookId, currentPage, reviewsPerPage]);\r\n\r\n  if (isLoading) {\r\n    return <SpinnerLoading />;\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <div className=\"container m-5\">\r\n        <p>{httpError}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const indexOfLastReview: number = currentPage * reviewsPerPage;\r\n  const indexOfFirstReview: number = indexOfLastReview - reviewsPerPage;\r\n\r\n  let lastItem =\r\n    reviewsPerPage * currentPage <= totalAmountOfReviews\r\n      ? reviewsPerPage * currentPage\r\n      : totalAmountOfReviews;\r\n\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div>\r\n        <h3>Comments: ({reviews.length})</h3>\r\n      </div>\r\n      <p>\r\n        {indexOfFirstReview + 1} to {lastItem} of {totalAmountOfReviews} items:\r\n      </p>\r\n      <div className=\"row\">\r\n        {reviews.map((review) => (\r\n          <Reviews review={review} key={review?.reviewId} />\r\n        ))}\r\n      </div>\r\n\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          paginate={paginate}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}