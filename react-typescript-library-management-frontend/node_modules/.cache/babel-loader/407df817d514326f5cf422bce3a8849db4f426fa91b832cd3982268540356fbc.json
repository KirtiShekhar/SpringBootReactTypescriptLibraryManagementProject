{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\react-typescript-library-management\\\\src\\\\layouts\\\\MessagesPage\\\\components\\\\PostNewMessage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport UserMessagesRequest from \"../../../models/userMessagesRequest\";\nimport { useSelector } from \"react-redux\";\nimport { MESSAGE_BASE_URL } from \"../../../commons/constants\";\nimport { authHeader } from \"../../../services/base.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostNewMessage = () => {\n  _s();\n  const currentSigInUser = useSelector(state => state.user);\n  const [title, setTitle] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n  const [displayWarning, setDisplayWarning] = useState(false);\n  const [displaySuccess, setDisplaySuccess] = useState(false);\n  async function submitNewQuestion() {\n    const url = MESSAGE_BASE_URL + `service/postMessage`;\n    if (currentSigInUser !== null && currentSigInUser !== void 0 && currentSigInUser.userId && title !== \"\" && question !== \"\") {\n      const messageRequestModel = new UserMessagesRequest(title, question);\n      const requestOptions = {\n        method: \"POST\",\n        headers: authHeader(),\n        body: JSON.stringify(messageRequestModel)\n      };\n      const submitNewQuestionResponse = await fetch(url, requestOptions);\n      if (!submitNewQuestionResponse.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      setTitle(\"\");\n      setQuestion(\"\");\n      setDisplayWarning(false);\n      setDisplaySuccess(true);\n      /* } else {*/\n      setDisplayWarning(true);\n      setDisplaySuccess(false);\n      /* }*/\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: \"Ask question to Luv 2 Read Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        method: \"POST\",\n        children: [displayWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger\",\n          role: \"alert\",\n          children: \"All fields must be filled out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), displaySuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success\",\n          role: \"alert\",\n          children: \"Question added successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"exampleFormControlInput1\",\n            placeholder: \"Title\",\n            onChange: e => setTitle(e.target.value),\n            value: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleFormControlTextarea1\",\n            rows: 3,\n            onChange: e => setQuestion(e.target.value),\n            value: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-primary mt-3\",\n            onClick: submitNewQuestion,\n            children: \"Submit Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(PostNewMessage, \"Uy+MzgyGy1GKy895shhIc9jLa2w=\", false, function () {\n  return [useSelector];\n});\n_c = PostNewMessage;\nvar _c;\n$RefreshReg$(_c, \"PostNewMessage\");","map":{"version":3,"names":["useState","UserMessagesRequest","useSelector","MESSAGE_BASE_URL","authHeader","PostNewMessage","currentSigInUser","state","user","title","setTitle","question","setQuestion","displayWarning","setDisplayWarning","displaySuccess","setDisplaySuccess","submitNewQuestion","url","userId","messageRequestModel","requestOptions","method","headers","body","JSON","stringify","submitNewQuestionResponse","fetch","ok","Error","e","target","value"],"sources":["D:/ReactProjects/react-typescript-library-management/src/layouts/MessagesPage/components/PostNewMessage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport UserMessagesRequest from \"../../../models/userMessagesRequest\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MESSAGE_BASE_URL } from \"../../../commons/constants\";\r\nimport { authHeader } from \"../../../services/base.service\";\r\n\r\nexport const PostNewMessage = () => {\r\n  const currentSigInUser = useSelector((state: any) => state.user);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [displayWarning, setDisplayWarning] = useState(false);\r\n  const [displaySuccess, setDisplaySuccess] = useState(false);\r\n\r\n  async function submitNewQuestion() {\r\n    const url = MESSAGE_BASE_URL + `service/postMessage`;\r\n    if (currentSigInUser?.userId && title !== \"\" && question !== \"\") {\r\n      const messageRequestModel: UserMessagesRequest = new UserMessagesRequest(\r\n        title,\r\n        question\r\n      );\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: authHeader(),\r\n        body: JSON.stringify(messageRequestModel),\r\n      };\r\n\r\n      const submitNewQuestionResponse = await fetch(url, requestOptions);\r\n      if (!submitNewQuestionResponse.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      setTitle(\"\");\r\n      setQuestion(\"\");\r\n      setDisplayWarning(false);\r\n      setDisplaySuccess(true);\r\n      /* } else {*/\r\n      setDisplayWarning(true);\r\n      setDisplaySuccess(false);\r\n      /* }*/\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card mt-3\">\r\n      <div className=\"card-header\">Ask question to Luv 2 Read Admin</div>\r\n      <div className=\"card-body\">\r\n        <form method=\"POST\">\r\n          {displayWarning && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              All fields must be filled out\r\n            </div>\r\n          )}\r\n          {displaySuccess && (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              Question added successfully\r\n            </div>\r\n          )}\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlInput1\"\r\n              placeholder=\"Title\"\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Question</label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows={3}\r\n              onChange={(e) => setQuestion(e.target.value)}\r\n              value={question}\r\n            ></textarea>\r\n          </div>\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={submitNewQuestion}\r\n            >\r\n              Submit Question\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}