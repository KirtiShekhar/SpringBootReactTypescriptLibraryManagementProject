{"ast":null,"code":"import axios from \"axios\";\nimport { sessionHistory } from \"../commons/history\";\nimport { clearCurrentUser } from \"../redux_reducers_actions/actions_auth/user.actions\";\nimport appStore from \"../redux_reducers_actions/allReducers\";\nexport const authHeader = () => {\n  const currentSignInUser = appStore.getState().user;\n  return {\n    \"Content-Type\": \"application/json\",\n    Authorization: \"Bearer \" + (currentSignInUser === null || currentSignInUser === void 0 ? void 0 : currentSignInUser.jwtAccessToken)\n  };\n};\nexport function handleResponseWithLoginCheck() {\n  axios.interceptors.response.use(response => response, error => {\n    var _error$response;\n    const currentUser = appStore.getState().user;\n    const isSignedIn = currentUser === null || currentUser === void 0 ? void 0 : currentUser.jwtAccessToken;\n    const status = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status;\n    if (isSignedIn && [401, 403].includes(status)) {\n      appStore.dispatch(clearCurrentUser());\n      sessionHistory.push(\"/login\");\n    }\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"names":["axios","sessionHistory","clearCurrentUser","appStore","authHeader","currentSignInUser","getState","user","Authorization","jwtAccessToken","handleResponseWithLoginCheck","interceptors","response","use","error","currentUser","isSignedIn","status","includes","dispatch","push","Promise","reject"],"sources":["D:/ReactProjects/react-typescript-library-management/src/services/base.service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { sessionHistory } from \"../commons/history\";\r\nimport { clearCurrentUser } from \"../redux_reducers_actions/actions_auth/user.actions\";\r\nimport appStore from \"../redux_reducers_actions/allReducers\";\r\n\r\nexport const authHeader = () => {\r\n  const currentSignInUser = appStore.getState().user;\r\n\r\n  return {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: \"Bearer \" + currentSignInUser?.jwtAccessToken,\r\n  };\r\n};\r\n\r\nexport function handleResponseWithLoginCheck() {\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => {\r\n      const currentUser = appStore.getState().user;\r\n      const isSignedIn = currentUser?.jwtAccessToken;\r\n      const status = error?.response?.status;\r\n\r\n      if (isSignedIn && [401, 403].includes(status)) {\r\n        appStore.dispatch(clearCurrentUser());\r\n        sessionHistory.push(\"/login\");\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,oBAAoB;AACnD,SAASC,gBAAgB,QAAQ,qDAAqD;AACtF,OAAOC,QAAQ,MAAM,uCAAuC;AAE5D,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC9B,MAAMC,iBAAiB,GAAGF,QAAQ,CAACG,QAAQ,EAAE,CAACC,IAAI;EAElD,OAAO;IACL,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAE,SAAS,IAAGH,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEI,cAAc;EAC9D,CAAC;AACH,CAAC;AAED,OAAO,SAASC,4BAA4B,GAAG;EAC7CV,KAAK,CAACW,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC5BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;IAAA;IACT,MAAMC,WAAW,GAAGZ,QAAQ,CAACG,QAAQ,EAAE,CAACC,IAAI;IAC5C,MAAMS,UAAU,GAAGD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEN,cAAc;IAC9C,MAAMQ,MAAM,GAAGH,KAAK,aAALA,KAAK,0CAALA,KAAK,CAAEF,QAAQ,oDAAf,gBAAiBK,MAAM;IAEtC,IAAID,UAAU,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACE,QAAQ,CAACD,MAAM,CAAC,EAAE;MAC7Cd,QAAQ,CAACgB,QAAQ,CAACjB,gBAAgB,EAAE,CAAC;MACrCD,cAAc,CAACmB,IAAI,CAAC,QAAQ,CAAC;IAC/B;IACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B,CAAC,CACF;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}